{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { db } from \"../config/config\";\nimport { ref, update } from 'firebase/database';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Editar = function (_React$Component) {\n  function Editar() {\n    var _this;\n    _classCallCheck(this, Editar);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, Editar, [].concat(args));\n    _this.state = {\n      id: '',\n      item: ''\n    };\n    _this.atualizarItem = function () {\n      var _this$state = _this.state,\n        id = _this$state.id,\n        item = _this$state.item;\n      var itemRef = ref(db, `escola/${id}`);\n      update(itemRef, {\n        item: item\n      }).then(function () {\n        console.log('Item atualizado com sucesso!');\n        _this.props.onAtualizacaoConcluida();\n      }).catch(function (error) {\n        console.error('Erro ao atualizar o item:', error);\n      });\n    };\n    return _this;\n  }\n  _inherits(Editar, _React$Component);\n  return _createClass(Editar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.itemSelecionado) {\n        var _this$props$itemSelec = this.props.itemSelecionado,\n          id = _this$props$itemSelec.id,\n          item = _this$props$itemSelec.item;\n        this.setState({\n          id: id,\n          item: item\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.itemSelecionado && this.props.itemSelecionado !== prevProps.itemSelecionado) {\n        var _this$props$itemSelec2 = this.props.itemSelecionado,\n          id = _this$props$itemSelec2.id,\n          item = _this$props$itemSelec2.item;\n        this.setState({\n          id: id,\n          item: item\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return _jsxs(View, {\n        style: estilos.formulario,\n        children: [_jsx(TextInput, {\n          style: estilos.input,\n          placeholder: \"Item\",\n          value: this.state.item,\n          onChangeText: function onChangeText(item) {\n            return _this2.setState({\n              item: item\n            });\n          }\n        }), _jsx(Button, {\n          title: \"Atualizar\",\n          onPress: this.atualizarItem\n        }), \" // Bot\\xE3o que chama o m\\xE9todo para atualizar o item no Firebase\"]\n      });\n    }\n  }]);\n}(React.Component);\nvar estilos = StyleSheet.create({\n  formulario: {\n    padding: 20\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingHorizontal: 8\n  }\n});\nexport default Editar;","map":{"version":3,"names":["React","View","TextInput","Button","StyleSheet","db","ref","update","jsx","_jsx","jsxs","_jsxs","Editar","_React$Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","state","id","item","atualizarItem","_this$state","itemRef","then","console","log","props","onAtualizacaoConcluida","catch","error","_inherits","_createClass","key","value","componentDidMount","itemSelecionado","_this$props$itemSelec","setState","componentDidUpdate","prevProps","_this$props$itemSelec2","render","_this2","style","estilos","formulario","children","input","placeholder","onChangeText","title","onPress","Component","create","padding","height","borderColor","borderWidth","marginBottom","paddingHorizontal"],"sources":["C:/Users/Keven Rafael/Desktop/livro/livro/componentes/Editar.js"],"sourcesContent":["import React from 'react';\r\nimport { View, TextInput, Button, StyleSheet } from 'react-native';\r\nimport { db } from '../config/config'; // Importa a configuração do Firebase\r\nimport { ref, update } from 'firebase/database'; // Importa funções para referenciar e atualizar dados no Firebase\r\n\r\nclass Editar extends React.Component {\r\n    state = {\r\n        id: '',\r\n        item: '',\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.itemSelecionado) {\r\n            const { id, item } = this.props.itemSelecionado;\r\n            this.setState({ id, item });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) { // Verifica se o item selecionado mudou e atualiza o estado com os novos valores\r\n        if (this.props.itemSelecionado && this.props.itemSelecionado !== prevProps.itemSelecionado) {\r\n            const { id, item } = this.props.itemSelecionado;\r\n            this.setState({ id, item });\r\n        }\r\n    }\r\n\r\n    atualizarItem = () => { // update\r\n        const { id, item } = this.state; // Obtém o ID e o valor do item do estado\r\n        const itemRef = ref(db, `escola/${id}`); // Cria uma referência ao item no Firebase\r\n        update(itemRef, { item }) // Atualiza o valor do item no Firebase\r\n            .then(() => {\r\n                console.log('Item atualizado com sucesso!'); // Loga sucesso no console\r\n                this.props.onAtualizacaoConcluida(); // Chama a função passada via props para indicar que a atualização foi concluída\r\n            })\r\n            .catch((error) => {\r\n                console.error('Erro ao atualizar o item:', error); // Loga o erro no console, caso ocorra\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <View style={estilos.formulario}>\r\n                <TextInput\r\n                    style={estilos.input}\r\n                    placeholder=\"Item\"\r\n                    value={this.state.item}\r\n                    onChangeText={(item) => this.setState({ item })}\r\n                />\r\n                <Button title=\"Atualizar\" onPress={this.atualizarItem} /> // Botão que chama o método para atualizar o item no Firebase\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst estilos = StyleSheet.create({\r\n    formulario: {\r\n        padding: 20,\r\n    },\r\n    input: {\r\n        height: 40,\r\n        borderColor: 'gray',\r\n        borderWidth: 1,\r\n        marginBottom: 10,\r\n        paddingHorizontal: 8,\r\n    },\r\n});\r\n\r\nexport default Editar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}